//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input System/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Normal"",
            ""id"": ""6f5c79b4-71b5-4767-b6a3-43baabe8073d"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""11a9d0ff-c016-431e-a276-37fc4dfdae73"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GetDown"",
                    ""type"": ""Button"",
                    ""id"": ""5490b632-66c2-4365-bbbe-852841a948a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6c528959-1e52-451d-bc00-3034f95b75ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""f0755bf4-e516-4a79-959d-5c888e885734"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""e42fc52e-b880-4a1e-815e-96600d3b1ad5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Limit"",
                    ""type"": ""Button"",
                    ""id"": ""9c55e5a2-179d-419e-87fd-54c1024c388d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack1"",
                    ""type"": ""Button"",
                    ""id"": ""f931dab3-41bb-4d8a-8f6c-410b7c781a1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack2"",
                    ""type"": ""Button"",
                    ""id"": ""d72414c3-ac7c-422e-9a6e-832749a749b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""09f517b0-d7ec-47ef-a83e-5e318a02df78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookUp"",
                    ""type"": ""Button"",
                    ""id"": ""21e42cb0-f558-48fb-8652-95d756d8a064"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookDown"",
                    ""type"": ""Button"",
                    ""id"": ""63e8bb7e-b7ac-454e-ab62-a5ff443b49d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""75af5bb5-5078-47c1-86d1-4414067c3efe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenItemStorage"",
                    ""type"": ""Button"",
                    ""id"": ""c61e2242-2283-42dd-8282-c997e4d9e7d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMap"",
                    ""type"": ""Button"",
                    ""id"": ""d17bfd65-6e61-4c51-9069-5cf21835dfa3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""b09a6ba5-bd11-47cf-b5e4-bf3c92dd55fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""f97b8e94-2439-4a1f-9f74-e01c01e918cc"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c25608b8-4a81-4589-a9c1-e082567869bc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""27663900-74ca-413e-a0a2-c7c59f78edaf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c013203b-202d-4f4a-b950-a62816dfabfd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bff66dca-2f5b-4372-aae5-dec735375648"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b22d0d4-54f3-423f-b491-e9184a157ecd"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Limit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d84957de-d75a-4a95-a73f-68122a2c92fc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bae478f-53ff-4525-a826-7b1d017a6b7f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8298531f-3c73-4caa-b18a-2cc251aa3b1e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0fc290cf-c1a2-488f-8aeb-96258bb57a2b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dad17a1b-56b9-415e-8ae4-1069094d78f2"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3eb7d064-03ec-4d7b-9ef6-c2cdbf886f56"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3c9d67e-cb22-4a4d-85d5-630d08872008"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa77d5fd-2dd9-483d-b2eb-e0033a985c9b"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenItemStorage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b18ca9e4-93b4-4864-8aa1-a7f66b0c153e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GetDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26311d97-c1b1-4a70-8b8c-bac4bb4e8a26"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""11797868-5dd6-49cd-8d85-182d0c5da60b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""647ce3a8-f1ba-482d-ac91-6a1bbf11de92"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""eca1d619-dff6-4eee-8013-5a7a952484b8"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Normal
        m_Normal = asset.FindActionMap("Normal", throwIfNotFound: true);
        m_Normal_Move = m_Normal.FindAction("Move", throwIfNotFound: true);
        m_Normal_GetDown = m_Normal.FindAction("GetDown", throwIfNotFound: true);
        m_Normal_Jump = m_Normal.FindAction("Jump", throwIfNotFound: true);
        m_Normal_Dash = m_Normal.FindAction("Dash", throwIfNotFound: true);
        m_Normal_Aim = m_Normal.FindAction("Aim", throwIfNotFound: true);
        m_Normal_Limit = m_Normal.FindAction("Limit", throwIfNotFound: true);
        m_Normal_Attack1 = m_Normal.FindAction("Attack1", throwIfNotFound: true);
        m_Normal_Attack2 = m_Normal.FindAction("Attack2", throwIfNotFound: true);
        m_Normal_Cancel = m_Normal.FindAction("Cancel", throwIfNotFound: true);
        m_Normal_LookUp = m_Normal.FindAction("LookUp", throwIfNotFound: true);
        m_Normal_LookDown = m_Normal.FindAction("LookDown", throwIfNotFound: true);
        m_Normal_OpenInventory = m_Normal.FindAction("OpenInventory", throwIfNotFound: true);
        m_Normal_OpenItemStorage = m_Normal.FindAction("OpenItemStorage", throwIfNotFound: true);
        m_Normal_OpenMap = m_Normal.FindAction("OpenMap", throwIfNotFound: true);
        m_Normal_Zoom = m_Normal.FindAction("Zoom", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Normal
    private readonly InputActionMap m_Normal;
    private INormalActions m_NormalActionsCallbackInterface;
    private readonly InputAction m_Normal_Move;
    private readonly InputAction m_Normal_GetDown;
    private readonly InputAction m_Normal_Jump;
    private readonly InputAction m_Normal_Dash;
    private readonly InputAction m_Normal_Aim;
    private readonly InputAction m_Normal_Limit;
    private readonly InputAction m_Normal_Attack1;
    private readonly InputAction m_Normal_Attack2;
    private readonly InputAction m_Normal_Cancel;
    private readonly InputAction m_Normal_LookUp;
    private readonly InputAction m_Normal_LookDown;
    private readonly InputAction m_Normal_OpenInventory;
    private readonly InputAction m_Normal_OpenItemStorage;
    private readonly InputAction m_Normal_OpenMap;
    private readonly InputAction m_Normal_Zoom;
    public struct NormalActions
    {
        private @PlayerInputActions m_Wrapper;
        public NormalActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Normal_Move;
        public InputAction @GetDown => m_Wrapper.m_Normal_GetDown;
        public InputAction @Jump => m_Wrapper.m_Normal_Jump;
        public InputAction @Dash => m_Wrapper.m_Normal_Dash;
        public InputAction @Aim => m_Wrapper.m_Normal_Aim;
        public InputAction @Limit => m_Wrapper.m_Normal_Limit;
        public InputAction @Attack1 => m_Wrapper.m_Normal_Attack1;
        public InputAction @Attack2 => m_Wrapper.m_Normal_Attack2;
        public InputAction @Cancel => m_Wrapper.m_Normal_Cancel;
        public InputAction @LookUp => m_Wrapper.m_Normal_LookUp;
        public InputAction @LookDown => m_Wrapper.m_Normal_LookDown;
        public InputAction @OpenInventory => m_Wrapper.m_Normal_OpenInventory;
        public InputAction @OpenItemStorage => m_Wrapper.m_Normal_OpenItemStorage;
        public InputAction @OpenMap => m_Wrapper.m_Normal_OpenMap;
        public InputAction @Zoom => m_Wrapper.m_Normal_Zoom;
        public InputActionMap Get() { return m_Wrapper.m_Normal; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NormalActions set) { return set.Get(); }
        public void SetCallbacks(INormalActions instance)
        {
            if (m_Wrapper.m_NormalActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnMove;
                @GetDown.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnGetDown;
                @GetDown.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnGetDown;
                @GetDown.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnGetDown;
                @Jump.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnJump;
                @Dash.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnDash;
                @Aim.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnAim;
                @Limit.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnLimit;
                @Limit.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnLimit;
                @Limit.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnLimit;
                @Attack1.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnAttack1;
                @Attack1.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnAttack1;
                @Attack1.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnAttack1;
                @Attack2.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnAttack2;
                @Attack2.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnAttack2;
                @Attack2.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnAttack2;
                @Cancel.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnCancel;
                @LookUp.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnLookUp;
                @LookUp.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnLookUp;
                @LookUp.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnLookUp;
                @LookDown.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnLookDown;
                @LookDown.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnLookDown;
                @LookDown.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnLookDown;
                @OpenInventory.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenInventory;
                @OpenItemStorage.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenItemStorage;
                @OpenItemStorage.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenItemStorage;
                @OpenItemStorage.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenItemStorage;
                @OpenMap.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenMap;
                @OpenMap.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenMap;
                @OpenMap.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnOpenMap;
                @Zoom.started -= m_Wrapper.m_NormalActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_NormalActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_NormalActionsCallbackInterface.OnZoom;
            }
            m_Wrapper.m_NormalActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @GetDown.started += instance.OnGetDown;
                @GetDown.performed += instance.OnGetDown;
                @GetDown.canceled += instance.OnGetDown;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Limit.started += instance.OnLimit;
                @Limit.performed += instance.OnLimit;
                @Limit.canceled += instance.OnLimit;
                @Attack1.started += instance.OnAttack1;
                @Attack1.performed += instance.OnAttack1;
                @Attack1.canceled += instance.OnAttack1;
                @Attack2.started += instance.OnAttack2;
                @Attack2.performed += instance.OnAttack2;
                @Attack2.canceled += instance.OnAttack2;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @LookUp.started += instance.OnLookUp;
                @LookUp.performed += instance.OnLookUp;
                @LookUp.canceled += instance.OnLookUp;
                @LookDown.started += instance.OnLookDown;
                @LookDown.performed += instance.OnLookDown;
                @LookDown.canceled += instance.OnLookDown;
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @OpenItemStorage.started += instance.OnOpenItemStorage;
                @OpenItemStorage.performed += instance.OnOpenItemStorage;
                @OpenItemStorage.canceled += instance.OnOpenItemStorage;
                @OpenMap.started += instance.OnOpenMap;
                @OpenMap.performed += instance.OnOpenMap;
                @OpenMap.canceled += instance.OnOpenMap;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
            }
        }
    }
    public NormalActions @Normal => new NormalActions(this);
    public interface INormalActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnGetDown(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnLimit(InputAction.CallbackContext context);
        void OnAttack1(InputAction.CallbackContext context);
        void OnAttack2(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnLookUp(InputAction.CallbackContext context);
        void OnLookDown(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnOpenItemStorage(InputAction.CallbackContext context);
        void OnOpenMap(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
    }
}
